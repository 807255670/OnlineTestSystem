<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nju.OnlineTestSystem.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.nju.OnlineTestSystem.model.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="studentid" jdbcType="VARCHAR" property="studentid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="major" jdbcType="VARCHAR" property="major" />
  </resultMap>
  <sql id="Base_Column_List">
    id, studentid, password, name, department, major
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <select id="selectStudentScoreByPaperPrimaryKey" parameterType="java.lang.Integer" resultType="map">
  select s.studentid,s.name,s.department,s.major,ps.singlescore,ps.multyscore,ps.judgescore,ps.fillscore,ps.subjectscore,ps.anserdate
   from students s,paperscore ps 
  where s.id=ps.studentid and ps.paperid=#{paperid,jdbcType=INTEGER}
  
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from students
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nju.OnlineTestSystem.model.Student">
    insert into students (id, studentid, password, 
      name, department, major
      )
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nju.OnlineTestSystem.model.Student">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentid != null">
        studentid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="major != null">
        major,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nju.OnlineTestSystem.model.Student">
    update students
    <set>
      <if test="studentid != null">
        studentid = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nju.OnlineTestSystem.model.Student">
    update students
    set studentid = #{studentid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>